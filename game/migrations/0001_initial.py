# Generated by Django 2.1.2 on 2018-11-24 06:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_x', models.IntegerField()),
                ('position_y', models.IntegerField()),
                ('type', models.IntegerField(choices=[(0, 'Undefined'), (1, 'Normal'), (2, 'Farm'), (3, 'Deprecated'), (4, 'River'), (5, 'Tree')], default=0)),
            ],
            options={
                'verbose_name': 'Cell',
            },
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(choices=[(0, 'Undefined'), (1, 'Growing'), (2, 'Ripening'), (3, 'Dead')], default=0)),
                ('ripening_age', models.IntegerField(default=100)),
                ('growing_speed', models.FloatField(default=1.0)),
            ],
            options={
                'verbose_name': 'Plan',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CropSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_ripening_age', models.IntegerField(default=100)),
                ('base_growing_speed', models.FloatField(default=1.0)),
            ],
        ),
        migrations.CreateModel(
            name='CropSpeciesRewardDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(default=1)),
                ('crop_species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reward_cropses', to='game.CropSpecies')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ItemPrototype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('code', models.CharField(max_length=40, unique=True)),
                ('type', models.IntegerField(choices=[(0, 'Undefined'), (1, 'Seed'), (2, 'Resource'), (3, 'Kit')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='prototype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='game.ItemPrototype'),
        ),
        migrations.AddField(
            model_name='game',
            name='map',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='game', to='game.Map'),
        ),
        migrations.AddField(
            model_name='game',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='game', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cropspeciesrewarddetail',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Item'),
        ),
        migrations.AddField(
            model_name='cropspecies',
            name='reward_choices',
            field=models.ManyToManyField(related_name='crop_species', through='game.CropSpeciesRewardDetail', to='game.Item'),
        ),
        migrations.AddField(
            model_name='crop',
            name='crop_species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crops', to='game.CropSpecies'),
        ),
        migrations.AddField(
            model_name='cell',
            name='crop',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cells', to='game.Crop'),
        ),
        migrations.AlterUniqueTogether(
            name='cropspeciesrewarddetail',
            unique_together={('crop_species', 'item')},
        ),
        migrations.AlterUniqueTogether(
            name='cell',
            unique_together={('position_x', 'position_y')},
        ),
    ]
